|#| '../test_lib.nest' = test
|#| 'stdsutil.nest' = su

'Hi!' 10 '_' @su.ljust  'Hi!_______' @test.assert_eq
'Hi!' 10 '_' @su.rjust  '_______Hi!' @test.assert_eq
'Hi!' 10 '_' @su.center '___Hi!____' @test.assert_eq
'Hi!' 9  '_' @su.center '___Hi!___'  @test.assert_eq

'validName' su.LETTERS @su.is_charset @test.assert_true
'invalid name' su.LETTERS @su.is_charset @test.assert_false

'this is a little sentence' 'this is' @su.starts_with @test.assert_true
'this is a little sentence' 'entence' @su.ends_with   @test.assert_true
'this is a little sentence' 'this us' @su.starts_with @test.assert_false
'this is a little sentence' 'sntence' @su.ends_with   @test.assert_false

'1word1 2word2' 'word' 'letter' @su.replace_substr '1letter1 2letter2' @test.assert_eq
'1word1 2word2' 'word' 'wor' @su.replace_substr '1wor1 2wor2' @test.assert_eq

'HELLO.:()' @su.is_upper @test.assert_true
'hello.:()' @su.is_lower @test.assert_true
'Hello.:()' @su.is_title @test.assert_true
'Hello.:()' @su.is_upper @test.assert_false
'hELLO.:()' @su.is_lower @test.assert_false
'HellO.:()' @su.is_title @test.assert_false

'Hello.:()' @su.to_upper 'HELLO.:()' @test.assert_eq
'hELLO.:()' @su.to_lower 'hello.:()' @test.assert_eq

'this is a sentence inside a string' 'a' @su.lfind 8  @test.assert_eq
'this is a sentence inside a string' 'a' @su.rfind 26 @test.assert_eq

'this is a sentence inside a string' 'is' @su.lfind 2 @test.assert_eq
'this is a sentence inside a string' 'is' @su.rfind 5 @test.assert_eq

'hello' @su.is_alpha @test.assert_true
'hell0' @su.is_alpha @test.assert_false
'110' @su.is_digit @test.assert_true
'11o' @su.is_alpha @test.assert_false
'hell0' @su.is_alnum @test.assert_true
'hell0 everybody' @su.is_printable @test.assert_true
'hell0 everybody\n' @su.is_printable @test.assert_false

'hell0 everybody\n' @su.repr "'hell0 everybody\\n'" @test.assert_eq
'hell0 everybody\x10' @su.repr "'hell0 everybody\\x10'" @test.assert_eq
'helloè' @su.repr "'helloè'" @test.assert_eq
-1b @su.repr '255b' @test.assert_eq
'"' @su.repr "'\"'" @test.assert_eq
"'" @su.repr '"\'"' @test.assert_eq

{ 72b, 105b } @su.bytearray_to_str 'Hi' @test.assert_eq
'Hi' @su.str_to_bytearray { 72b, 105b } @test.assert_eq

'a b' @su.split { 'a', 'b' } @test.assert_eq
'a  b' @su.split { 'a', 'b' } @test.assert_eq
' a b' @su.split { 'a', 'b' } @test.assert_eq
'a b ' @su.split { 'a', 'b' } @test.assert_eq
' a  b ' @su.split { 'a', 'b' } @test.assert_eq
{ 'a', 'b', 'c' } @su.join 'a b c' @test.assert_eq
{ 'a', 'b', 'c' } '' @su.join 'abc' @test.assert_eq

?::su.DIGITS            Str @test.assert_eq
?::su.HEX_DIGITS        Str @test.assert_eq
?::su.OCT_DIGITS        Str @test.assert_eq
?::su.BIN_DIGITS        Str @test.assert_eq
?::su.LETTERS           Str @test.assert_eq
?::su.UPPERCASE_LETTERS Str @test.assert_eq
?::su.LOWERCASE_LETTERS Str @test.assert_eq
?::su.PUNCTUATION       Str @test.assert_eq
