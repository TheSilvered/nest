|#| '../test_lib.nest' = test
|#| 'stdio.nest' = io

#read_whole_file f [
    f @io.get_fptr = start
    f io.FROM_START 0 @io.move_fptr
    f @io.read = content
    f io.FROM_START start @io.move_fptr
    => content
]

{ 72b, 105b } = bytes -- Hi

'test_files/file.txt' 'wb+' @io.open = f
f bytes @io.write_bytes
f @io.close

'test_files/file.txt' 'rb' @io.open = f
f -1 @io.read_bytes bytes @test.assert_eq
f @io.close

'test_files/file.txt' 'w' @io.open = f
f 'Hello' @io.write
f @io.close

f @io.get_flags '-w-' @test.assert_eq

'test_files/file.txt' 'r+' @io.open = f

f -1 @io.read 'Hello' @test.assert_eq
f @io.file_size 5 @test.assert_eq
f io.FROM_CUR -2 @io.move_fptr
f @io.get_fptr 3 @test.assert_eq
f -1 @io.read 'lo' @test.assert_eq

f @io._set_stdout
', world!' @io.println
io.STDOUT @io._set_stdout

f @read_whole_file 'Hello, world!\n' @test.assert_eq

f @io.close

false @io.virtual_iof = f
f 'Hello' @io.write
f @io.flush 5 @test.assert_eq
f @read_whole_file 'Hello' @test.assert_eq
f @io.get_flags 'rw-' @test.assert_eq
f @io.close

true @io.virtual_iof = f
f @io.get_flags 'rwb' @test.assert_eq
f @io.close

false 10 @io.virtual_iof = f1
false  0 @io.virtual_iof = f2
'abc' false f1 @io.println
'abc' false f2 @io.println
f1 @read_whole_file '' @test.assert_eq
f2 @read_whole_file 'abc\n' @test.assert_eq
f1 'defghijk' @io.write
f1 @read_whole_file 'abc\ndefghijk' @test.assert_eq
f1 @io.close
f2 @io.close
