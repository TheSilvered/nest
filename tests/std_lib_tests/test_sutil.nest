|#| '../test_lib.nest' = test
|#| 'stdsutil.nest' = su

'abcd' 'a' @su.lfind 0 @test.assert_eq
'abcd' 'b' @su.lfind 1 @test.assert_eq
'abcd' 'd' @su.lfind 3 @test.assert_eq
'abab' 'a' @su.lfind 0 @test.assert_eq
'abab' 'b' @su.lfind 1 @test.assert_eq
'abcd' 'e' @su.lfind -1 @test.assert_eq
'abcd' 'abcd' @su.lfind 0 @test.assert_eq
'a\0bc' 'b' @su.lfind 2 @test.assert_eq
'a\0bc' '\0b' @su.lfind 1 @test.assert_eq
'Ã Ã¨Ã¬Ã²Ã¹' 'Ã ' @su.lfind 0 @test.assert_eq
'Ã Ã¨Ã¬Ã²Ã¹' 'Ã¨' @su.lfind 1 @test.assert_eq
'Ã Ã¨Ã¬Ã²Ã¹' 'Ã²' @su.lfind 3 @test.assert_eq
'abcd' 'a' 1 @su.lfind -1 @test.assert_eq
'abcd' 'a' 0 @su.lfind 0 @test.assert_eq
'abcd' 'd' 3 @su.lfind 3 @test.assert_eq
'abcd' 'd' 4 @su.lfind -1 @test.assert_eq
'abcd' 'b' -2 @su.lfind -1 @test.assert_eq
'abcd' 'b' -4 @su.lfind 1 @test.assert_eq
'abcd' 'b' -10 @su.lfind 1 @test.assert_eq
'abcd' 'a' null 1 @su.lfind 0 @test.assert_eq
'abcd' 'a' null 0 @su.lfind -1 @test.assert_eq
'abcd' 'd' null 3 @su.lfind -1 @test.assert_eq
'abcd' 'd' null 4 @su.lfind 3 @test.assert_eq
'abcd' 'b' null -2 @su.lfind 1 @test.assert_eq
'abcd' 'b' null -4 @su.lfind -1 @test.assert_eq
'abcd' 'b' null -10 @su.lfind -1 @test.assert_eq
'abcd' 'b' 1 1 @su.lfind -1 @test.assert_eq
'abcd' 'b' 1 2 @su.lfind 1 @test.assert_eq
'abcd' 'b' 3 1 @su.lfind -1 @test.assert_eq

'abcd' 'a' @su.rfind 0 @test.assert_eq
'abcd' 'b' @su.rfind 1 @test.assert_eq
'abcd' 'd' @su.rfind 3 @test.assert_eq
'abab' 'a' @su.rfind 2 @test.assert_eq
'abab' 'b' @su.rfind 3 @test.assert_eq
'abcd' 'e' @su.rfind -1 @test.assert_eq
'abcd' 'abcd' @su.rfind 0 @test.assert_eq
'a\0bc' 'b' @su.rfind 2 @test.assert_eq
'a\0bc' '\0b' @su.rfind 1 @test.assert_eq
'Ã Ã¨Ã¬Ã²Ã¹' 'Ã ' @su.rfind 0 @test.assert_eq
'Ã Ã¨Ã¬Ã²Ã¹' 'Ã¨' @su.rfind 1 @test.assert_eq
'Ã Ã¨Ã¬Ã²Ã¹' 'Ã²' @su.rfind 3 @test.assert_eq
'abcd' 'a' 1 @su.rfind -1 @test.assert_eq
'abcd' 'a' 0 @su.rfind 0 @test.assert_eq
'abcd' 'd' 3 @su.rfind 3 @test.assert_eq
'abcd' 'd' 4 @su.rfind -1 @test.assert_eq
'abcd' 'b' -2 @su.rfind -1 @test.assert_eq
'abcd' 'b' -4 @su.rfind 1 @test.assert_eq
'abcd' 'b' -10 @su.rfind 1 @test.assert_eq
'abcd' 'a' null 1 @su.rfind 0 @test.assert_eq
'abcd' 'a' null 0 @su.rfind -1 @test.assert_eq
'abcd' 'd' null 3 @su.rfind -1 @test.assert_eq
'abcd' 'd' null 4 @su.rfind 3 @test.assert_eq
'abcd' 'b' null -2 @su.rfind 1 @test.assert_eq
'abcd' 'b' null -4 @su.rfind -1 @test.assert_eq
'abcd' 'b' null -10 @su.rfind -1 @test.assert_eq
'abcd' 'b' 1 1 @su.rfind -1 @test.assert_eq
'abcd' 'b' 1 2 @su.rfind 1 @test.assert_eq
'abcd' 'b' 3 1 @su.rfind -1 @test.assert_eq

'abcd' 'ab' @su.starts_with @test.assert_true
'abcd' 'bc' @su.starts_with @test.assert_false
'abcd' 'abcd' @su.starts_with @test.assert_true
'abcd' 'abcda' @su.starts_with @test.assert_false
'abcd' 'cd' @su.ends_with @test.assert_true
'abcd' 'bc' @su.ends_with @test.assert_false
'abcd' 'abcd' @su.ends_with @test.assert_true
'abcd' 'aabcd' @su.ends_with @test.assert_false

'  abc  ' @su.trim 'abc' @test.assert_eq
'abc  ' @su.trim 'abc' @test.assert_eq
'  abc' @su.trim 'abc' @test.assert_eq
'abc' @su.trim 'abc' @test.assert_eq
'\f\n\r\t\vabc\f\n\r\t\v' @su.trim 'abc' @test.assert_eq
'  \0abc  ' @su.trim '\0abc' @test.assert_eq
'  abc\0  ' @su.trim 'abc\0' @test.assert_eq
'  a\0bc\0  ' @su.trim 'a\0bc\0' @test.assert_eq
'  a b c  ' @su.trim 'a b c' @test.assert_eq
'  Ã  Ã¨ Ã¬  ' @su.trim 'Ã  Ã¨ Ã¬' @test.assert_eq
'  Ã ei  ' @su.trim 'Ã ei' @test.assert_eq

'  abc  ' @su.ltrim 'abc  ' @test.assert_eq
'abc  ' @su.ltrim 'abc  ' @test.assert_eq
'  abc' @su.ltrim 'abc' @test.assert_eq
'abc' @su.ltrim 'abc' @test.assert_eq
'\f\n\r\t\vabc\f\n\r\t\v' @su.ltrim 'abc\f\n\r\t\v' @test.assert_eq
'  \0abc  ' @su.ltrim '\0abc  ' @test.assert_eq
'  abc\0  ' @su.ltrim 'abc\0  ' @test.assert_eq
'  a\0bc\0  ' @su.ltrim 'a\0bc\0  ' @test.assert_eq
'  a b c  ' @su.ltrim 'a b c  ' @test.assert_eq
'  Ã  Ã¨ Ã¬  ' @su.ltrim 'Ã  Ã¨ Ã¬  ' @test.assert_eq
'  Ã ei  ' @su.ltrim 'Ã ei  ' @test.assert_eq

'  abc  ' @su.rtrim '  abc' @test.assert_eq
'abc  ' @su.rtrim 'abc' @test.assert_eq
'  abc' @su.rtrim '  abc' @test.assert_eq
'abc' @su.rtrim 'abc' @test.assert_eq
'\f\n\r\t\vabc\f\n\r\t\v' @su.rtrim '\f\n\r\t\vabc' @test.assert_eq
'  \0abc  ' @su.rtrim '  \0abc' @test.assert_eq
'  abc\0  ' @su.rtrim '  abc\0' @test.assert_eq
'  a\0bc\0  ' @su.rtrim '  a\0bc\0' @test.assert_eq
'  a b c  ' @su.rtrim '  a b c' @test.assert_eq
'  Ã  Ã¨ Ã¬  ' @su.rtrim '  Ã  Ã¨ Ã¬' @test.assert_eq
'  Ã ei  ' @su.rtrim '  Ã ei' @test.assert_eq

'abc' 6 @su.ljust 'abc   ' @test.assert_eq
'abc' 5 @su.ljust 'abc  ' @test.assert_eq
'abc' 4 @su.ljust 'abc ' @test.assert_eq
'abc' 3 @su.ljust 'abc' @test.assert_eq
'abc' 2 @su.ljust 'abc' @test.assert_eq
'abc' 0 @su.ljust 'abc' @test.assert_eq
'Ã Ã¨Ã¬' 6 @su.ljust 'Ã Ã¨Ã¬   ' @test.assert_eq
'Ã Ã¨Ã¬' 5 @su.ljust 'Ã Ã¨Ã¬  ' @test.assert_eq
'Ã Ã¨Ã¬' 4 @su.ljust 'Ã Ã¨Ã¬ ' @test.assert_eq
'abc' -10 @su.ljust 'abc' @test.assert_eq
'abc' 6 '_' @su.ljust 'abc___' @test.assert_eq
'abc' 5 '_' @su.ljust 'abc__' @test.assert_eq
'abc' 4 '_' @su.ljust 'abc_' @test.assert_eq
'abc' 6 'ğŸ˜Š' @su.ljust 'abcğŸ˜ŠğŸ˜ŠğŸ˜Š' @test.assert_eq
'abc' 5 'ğŸ˜Š' @su.ljust 'abcğŸ˜ŠğŸ˜Š' @test.assert_eq
'abc' 4 'ğŸ˜Š' @su.ljust 'abcğŸ˜Š' @test.assert_eq
'abc' 6 '\0' @su.ljust 'abc\0\0\0' @test.assert_eq
'abc' 5 '\0' @su.ljust 'abc\0\0' @test.assert_eq
'abc' 4 '\0' @su.ljust 'abc\0' @test.assert_eq
su.ljust {'abc', 4, 'ab'} @test.assert_raises_error

'abc' 6 @su.rjust '   abc' @test.assert_eq
'abc' 5 @su.rjust '  abc' @test.assert_eq
'abc' 4 @su.rjust ' abc' @test.assert_eq
'abc' 3 @su.rjust 'abc' @test.assert_eq
'abc' 2 @su.rjust 'abc' @test.assert_eq
'abc' 0 @su.rjust 'abc' @test.assert_eq
'Ã Ã¨Ã¬' 6 @su.rjust '   Ã Ã¨Ã¬' @test.assert_eq
'Ã Ã¨Ã¬' 5 @su.rjust '  Ã Ã¨Ã¬' @test.assert_eq
'Ã Ã¨Ã¬' 4 @su.rjust ' Ã Ã¨Ã¬' @test.assert_eq
'abc' -10 @su.rjust 'abc' @test.assert_eq
'abc' 6 '_' @su.rjust '___abc' @test.assert_eq
'abc' 5 '_' @su.rjust '__abc' @test.assert_eq
'abc' 4 '_' @su.rjust '_abc' @test.assert_eq
'abc' 6 'ğŸ˜Š' @su.rjust 'ğŸ˜ŠğŸ˜ŠğŸ˜Šabc' @test.assert_eq
'abc' 5 'ğŸ˜Š' @su.rjust 'ğŸ˜ŠğŸ˜Šabc' @test.assert_eq
'abc' 4 'ğŸ˜Š' @su.rjust 'ğŸ˜Šabc' @test.assert_eq
'abc' 6 '\0' @su.rjust '\0\0\0abc' @test.assert_eq
'abc' 5 '\0' @su.rjust '\0\0abc' @test.assert_eq
'abc' 4 '\0' @su.rjust '\0abc' @test.assert_eq
su.rjust {'abc', 4, 'ab'} @test.assert_raises_error

'abc' 6 @su.cjust ' abc  ' @test.assert_eq
'abc' 5 @su.cjust ' abc ' @test.assert_eq
'abc' 4 @su.cjust 'abc ' @test.assert_eq
'abc' 3 @su.cjust 'abc' @test.assert_eq
'abc' 2 @su.cjust 'abc' @test.assert_eq
'abc' 0 @su.cjust 'abc' @test.assert_eq
'Ã Ã¨Ã¬' 6 @su.cjust ' Ã Ã¨Ã¬  ' @test.assert_eq
'Ã Ã¨Ã¬' 5 @su.cjust ' Ã Ã¨Ã¬ ' @test.assert_eq
'Ã Ã¨Ã¬' 4 @su.cjust 'Ã Ã¨Ã¬ ' @test.assert_eq
'abc' -10 @su.cjust 'abc' @test.assert_eq
'abc' 6 '_' @su.cjust '_abc__' @test.assert_eq
'abc' 5 '_' @su.cjust '_abc_' @test.assert_eq
'abc' 4 '_' @su.cjust 'abc_' @test.assert_eq
'abc' 6 'ğŸ˜Š' @su.cjust 'ğŸ˜ŠabcğŸ˜ŠğŸ˜Š' @test.assert_eq
'abc' 5 'ğŸ˜Š' @su.cjust 'ğŸ˜ŠabcğŸ˜Š' @test.assert_eq
'abc' 4 'ğŸ˜Š' @su.cjust 'abcğŸ˜Š' @test.assert_eq
'abc' 6 '\0' @su.cjust '\0abc\0\0' @test.assert_eq
'abc' 5 '\0' @su.cjust '\0abc\0' @test.assert_eq
'abc' 4 '\0' @su.cjust 'abc\0' @test.assert_eq
su.cjust {'abc', 4, 'ab'} @test.assert_raises_error

'hElLo WoRlD' @su.to_title 'Hello World' @test.assert_eq
'hElLoWoRlD' @su.to_title 'Helloworld' @test.assert_eq
'hElLo+WoRlD' @su.to_title 'Hello+world' @test.assert_eq
'hElLo +WoRlD' @su.to_title 'Hello +world' @test.assert_eq
'hElLo \0 WoRlD' @su.to_title 'Hello \0 World' @test.assert_eq

'hElLo WoRlD' @su.to_upper 'HELLO WORLD' @test.assert_eq
'hElLoWoRlD' @su.to_upper 'HELLOWORLD' @test.assert_eq
'hElLo+WoRlD' @su.to_upper 'HELLO+WORLD' @test.assert_eq
'hElLo +WoRlD' @su.to_upper 'HELLO +WORLD' @test.assert_eq
'hElLo \0 WoRlD' @su.to_upper 'HELLO \0 WORLD' @test.assert_eq

'hElLo WoRlD' @su.to_lower 'hello world' @test.assert_eq
'hElLoWoRlD' @su.to_lower 'helloworld' @test.assert_eq
'hElLo+WoRlD' @su.to_lower 'hello+world' @test.assert_eq
'hElLo +WoRlD' @su.to_lower 'hello +world' @test.assert_eq
'hElLo \0 WoRlD' @su.to_lower 'hello \0 world' @test.assert_eq

'Hello World' @su.is_title @test.assert_true
'Helloworld' @su.is_title @test.assert_true
'Hello+world' @su.is_title @test.assert_true
'Hello +world' @su.is_title @test.assert_true
'Hello \0 World' @su.is_title @test.assert_true
'Hello WorlD' @su.is_title @test.assert_false
'helloworld' @su.is_title @test.assert_false
'Hello+World' @su.is_title @test.assert_false
'Hello +World' @su.is_title @test.assert_false
'Hello \0 world' @su.is_title @test.assert_false

'HELLO WORLD' @su.is_upper @test.assert_true
'HELLOWORLD' @su.is_upper @test.assert_true
'HELLO+WORLD' @su.is_upper @test.assert_true
'HELLO +WORLD' @su.is_upper @test.assert_true
'HELLO \0 WORLD' @su.is_upper @test.assert_true
'HELLO WORLd' @su.is_upper @test.assert_false
'hELLOWORLD' @su.is_upper @test.assert_false
'HELLO+wORLD' @su.is_upper @test.assert_false
'HELLO +wORLD' @su.is_upper @test.assert_false
'HELLO \0 wORLD' @su.is_upper @test.assert_false

'hello world' @su.is_lower @test.assert_true
'helloworld' @su.is_lower @test.assert_true
'hello+world' @su.is_lower @test.assert_true
'hello +world' @su.is_lower @test.assert_true
'hello \0 world' @su.is_lower @test.assert_true
'hello World' @su.is_lower @test.assert_false
'Helloworld' @su.is_lower @test.assert_false
'hello+World' @su.is_lower @test.assert_false
'hello +worlD' @su.is_lower @test.assert_false
'hello \0 worlD' @su.is_lower @test.assert_false

'hello' @su.is_alpha @test.assert_true
'HEllo' @su.is_alpha @test.assert_true
'hell0' @su.is_alpha @test.assert_false
'110' @su.is_digit @test.assert_true
'11o' @su.is_alpha @test.assert_false
'hell0' @su.is_alnum @test.assert_true
'hell0 everybody' @su.is_printable @test.assert_true
'hell0 everybody\n' @su.is_printable @test.assert_false
' \n\r\f\t\v' @su.is_space @test.assert_true
' \n\r\f\t\va' @su.is_space @test.assert_false
' \n\r\f\t\v1' @su.is_space @test.assert_false
' \n\r\f\t\v.' @su.is_space @test.assert_false
'validName' su.LETTERS @su.is_charset @test.assert_true
'invalid name' su.LETTERS @su.is_charset @test.assert_false
su.PRINTABLE @su.is_printable @test.assert_true
'\x7f' @su.is_printable @test.assert_false
'\0' @su.is_printable @test.assert_false
'\n' @su.is_printable @test.assert_false

'a b' @su.lsplit {'a', 'b'} @test.assert_eq
'a  b' @su.lsplit {'a', 'b'} @test.assert_eq
'a\n\tb' @su.lsplit {'a', 'b'} @test.assert_eq
' a b' @su.lsplit {'a', 'b'} @test.assert_eq
'  a b' @su.lsplit {'a', 'b'} @test.assert_eq
'  a b ' @su.lsplit {'a', 'b'} @test.assert_eq
'  a b  ' @su.lsplit {'a', 'b'} @test.assert_eq
' a b  ' @su.lsplit {'a', 'b'} @test.assert_eq
'a b  ' @su.lsplit {'a', 'b'} @test.assert_eq
'a b ' @su.lsplit {'a', 'b'} @test.assert_eq
'a,b,c' ',' @su.lsplit {'a', 'b', 'c'} @test.assert_eq
'a,b,c d' ',' @su.lsplit {'a', 'b', 'c d'} @test.assert_eq
' a,b,c d' ',' @su.lsplit {' a', 'b', 'c d'} @test.assert_eq
' a, b, c d' ',' @su.lsplit {' a', ' b', ' c d'} @test.assert_eq
'a,b,c,d' ',' 3 @su.lsplit {'a', 'b', 'c', 'd'} @test.assert_eq
'a,b,c,d' ',' 2 @su.lsplit {'a', 'b', 'c,d'} @test.assert_eq
'a,b,c,d' ',' 1 @su.lsplit {'a', 'b,c,d'} @test.assert_eq
'a,b,c,d' ',' 0 @su.lsplit {'a,b,c,d'} @test.assert_eq
'a b c d' null 3 @su.lsplit {'a', 'b', 'c', 'd'} @test.assert_eq
'a  b  c  d' null 3 @su.lsplit {'a', 'b', 'c', 'd'} @test.assert_eq
'  a  b  c  d  ' null 3 @su.lsplit {'a', 'b', 'c', 'd  '} @test.assert_eq
'  a b c d' null 3 @su.lsplit {'a', 'b', 'c', 'd'} @test.assert_eq
'a b c d' null 2 @su.lsplit {'a', 'b', 'c d'} @test.assert_eq
'a  b  c  d' null 2 @su.lsplit {'a', 'b', 'c  d'} @test.assert_eq
'  a  b  c  d  ' null 2 @su.lsplit {'a', 'b', 'c  d  '} @test.assert_eq
'  a b c d' null 2 @su.lsplit {'a', 'b', 'c d'} @test.assert_eq
'a b c d' null 1 @su.lsplit {'a', 'b c d'} @test.assert_eq
'a  b  c  d' null 1 @su.lsplit {'a', 'b  c  d'} @test.assert_eq
'  a  b  c  d  ' null 1 @su.lsplit {'a', 'b  c  d  '} @test.assert_eq
'  a b c d' null 1 @su.lsplit {'a', 'b c d'} @test.assert_eq
'a b c d' null 0 @su.lsplit {'a b c d'} @test.assert_eq
'a  b  c  d' null 0 @su.lsplit {'a  b  c  d'} @test.assert_eq
'  a  b  c  d  ' null 0 @su.lsplit {'  a  b  c  d  '} @test.assert_eq
'  a b c d' null 0 @su.lsplit {'  a b c d'} @test.assert_eq

'a b' @su.rsplit {'a', 'b'} @test.assert_eq
'a  b' @su.rsplit {'a', 'b'} @test.assert_eq
'a\n\tb' @su.rsplit {'a', 'b'} @test.assert_eq
' a b' @su.rsplit {'a', 'b'} @test.assert_eq
'  a b' @su.rsplit {'a', 'b'} @test.assert_eq
'  a b ' @su.rsplit {'a', 'b'} @test.assert_eq
'  a b  ' @su.rsplit {'a', 'b'} @test.assert_eq
' a b  ' @su.rsplit {'a', 'b'} @test.assert_eq
'a b  ' @su.rsplit {'a', 'b'} @test.assert_eq
'a b ' @su.rsplit {'a', 'b'} @test.assert_eq
'a,b,c' ',' @su.rsplit {'a', 'b', 'c'} @test.assert_eq
'a,b,c d' ',' @su.rsplit {'a', 'b', 'c d'} @test.assert_eq
' a,b,c d' ',' @su.rsplit {' a', 'b', 'c d'} @test.assert_eq
' a, b, c d' ',' @su.rsplit {' a', ' b', ' c d'} @test.assert_eq
'a,b,c,d' ',' 3 @su.rsplit {'a', 'b', 'c', 'd'} @test.assert_eq
'a,b,c,d' ',' 2 @su.rsplit {'a,b', 'c', 'd'} @test.assert_eq
'a,b,c,d' ',' 1 @su.rsplit {'a,b,c', 'd'} @test.assert_eq
'a,b,c,d' ',' 0 @su.rsplit {'a,b,c,d'} @test.assert_eq
'a b c d' null 3 @su.rsplit {'a', 'b', 'c', 'd'} @test.assert_eq
'a  b  c  d' null 3 @su.rsplit {'a', 'b', 'c', 'd'} @test.assert_eq
'  a  b  c  d  ' null 3 @su.rsplit {'  a', 'b', 'c', 'd'} @test.assert_eq
'  a b c d' null 3 @su.rsplit {'  a', 'b', 'c', 'd'} @test.assert_eq
'a b c d' null 2 @su.rsplit {'a b', 'c', 'd'} @test.assert_eq
'a  b  c  d' null 2 @su.rsplit {'a  b', 'c', 'd'} @test.assert_eq
'  a  b  c  d  ' null 2 @su.rsplit {'  a  b', 'c', 'd'} @test.assert_eq
'  a b c d' null 2 @su.rsplit {'  a b', 'c', 'd'} @test.assert_eq
'a b c d' null 1 @su.rsplit {'a b c', 'd'} @test.assert_eq
'a  b  c  d' null 1 @su.rsplit {'a  b  c', 'd'} @test.assert_eq
'  a  b  c  d  ' null 1 @su.rsplit {'  a  b  c', 'd'} @test.assert_eq
'  a b c d' null 1 @su.rsplit {'  a b c', 'd'} @test.assert_eq
'a b c d' null 0 @su.rsplit {'a b c d'} @test.assert_eq
'a  b  c  d' null 0 @su.rsplit {'a  b  c  d'} @test.assert_eq
'  a  b  c  d  ' null 0 @su.rsplit {'  a  b  c  d  '} @test.assert_eq
'  a b c d' null 0 @su.rsplit {'  a b c d'} @test.assert_eq

'hello' 'he' @su.lremove 'llo' @test.assert_eq
'hello' 'hello' @su.lremove '' @test.assert_eq
'hello' 'ello' @su.lremove 'hello' @test.assert_eq
'hello' 'helloo' @su.lremove 'hello' @test.assert_eq
'hello' 'he' @su.rremove 'hello' @test.assert_eq
'hello' 'hello' @su.rremove '' @test.assert_eq
'hello' 'ello' @su.rremove 'h' @test.assert_eq
'hello' 'hhello' @su.rremove 'hello' @test.assert_eq

?::su.BIN_DIGITS        Str @test.assert_eq
?::su.OCT_DIGITS        Str @test.assert_eq
?::su.DIGITS            Str @test.assert_eq
?::su.HEX_DIGITS        Str @test.assert_eq
?::su.LETTERS           Str @test.assert_eq
?::su.UPPERCASE_LETTERS Str @test.assert_eq
?::su.LOWERCASE_LETTERS Str @test.assert_eq
?::su.PUNCTUATION       Str @test.assert_eq
?::su.PRINTABLE         Str @test.assert_eq
