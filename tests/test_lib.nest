|#| 'stdsys.nest' = sys
|#| 'stdsutil.nest' = su
|#| 'stderr.nest' = err

#_cast_obj obj type [
    => type :: obj
]

#_assertion_failed msg [
    'Assertion Error' !! msg
]

#assert_eq a b [
    a b == ?
        => null
    :
        (a @su.repr) ' == ' (b @su.repr) >< @_assertion_failed
]

#assert_ne a b [
    a b != ?
        => null
    :
        (a @su.repr) ' != ' (b @su.repr) >< @_assertion_failed
]

#assert_true a [
    a ?
        => null
    :
        (a @su.repr) ' == true' >< @_assertion_failed
]

#assert_false a [
    !a ?
        => null
    :
        (a @su.repr) ' == false' >< @_assertion_failed
]

#assert_cast_error obj type [
    ?? type :: obj
    ?! _ => null
    type ' :: ' obj ' did not fail' >< @_assertion_failed
]

#assert_raises_error func args [
    func args @err.try = res

    res.error null == ?
        'Func at ' (func @sys.get_addr) ' did not fail' >< @_assertion_failed
]

#println s [
    >>> (s '\n' ><)
]
