|#| '../test_lib.nest' = test
|#| 'stdsys.nest' = sys

{ { 9223372036854775807, 9223372036854775807 },
  { -9223372036854775808, -9223372036854775808 },
  { 0, 0 },
  { 32, 32 },
  { 64, 64 },
  { Int :: '10', 10 },
  { Int :: 10.5, 10 },
  { Int :: '9223372036854775807', 9223372036854775807 },
  { Int :: '-9223372036854775808', -9223372036854775808 },
  { Int :: '-9223372036854775809', 9223372036854775807 },
  { 9223372036854775807 1 +, -9223372036854775808 },
  { -9223372036854775808 1 -, 9223372036854775807 },
  { -:9223372036854775807, -9223372036854775807 },
  { Str :: 10, '10' },
  { Str :: -10, '-10' },
  { Str :: 9223372036854775807, '9223372036854775807'},
  { Str :: -9223372036854775808, '-9223372036854775808' },
  { Int :: (1 1.0 +), 2 } } = eq_tests

{ { 9223372036854775807, -9223372036854775807 },
  { 0, -1 },
  { 32, 31 },
  { 64, 63 },
  { Int :: '10', 11 },
  { Int :: 10.5, 11 },
  { 9223372036854775807 1 -, 9223372036854775807 },
  { -9223372036854775808 1 +, 9223372036854775807 },
  { -:9223372036854775807, 9223372036854775807 } } = ne_tests

{ 1, -1, 9223372036854775807, -9223372036854775808 } = true_tests

... Iter :: eq_tests := i [
  i.0 i.1 @test.assert_eq
]

... Iter :: ne_tests := i [
  i.0 i.1 @test.assert_ne
]

... Iter :: true_tests := i [
  Bool :: i @test.assert_true
]

Bool :: 0 @test.assert_false

-1 @sys.hash -2 @test.assert_eq
... 0 -> 100 := i [
  i @sys.hash i @test.assert_eq
]
