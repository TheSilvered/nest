|#| '../test_lib.nest' = test
|#| 'stdsys.nest' = sys

9223372036854775807 9223372036854775807 @test.assert_eq
-9223372036854775808 -9223372036854775808 @test.assert_eq
0 0 @test.assert_eq
32 32 @test.assert_eq
64 64 @test.assert_eq
9223372036854775807 1 + -9223372036854775808 @test.assert_eq
-:9223372036854775807 -9223372036854775807 @test.assert_eq
123 0123 @test.assert_eq
0b1010 0xa @test.assert_eq
0o123 83 @test.assert_eq
9223372036854775807 -9223372036854775808 @test.assert_ne
0 -1 @test.assert_ne
32 31 @test.assert_ne
64 63 @test.assert_ne
9223372036854775807 1 - 9223372036854775807 @test.assert_ne
-9223372036854775808 1 + 9223372036854775807 @test.assert_ne
-:9223372036854775807 9223372036854775807 @test.assert_ne

?::123 Int @test.assert_eq
?::0123 Int @test.assert_eq
?::00123 Int @test.assert_eq
?::0b101 Int @test.assert_eq
?::0B101 Int @test.assert_eq
?::0o123 Int @test.assert_eq
?::0O123 Int @test.assert_eq
?::0x123 Int @test.assert_eq
?::0X123 Int @test.assert_eq
?::0XEeF Int @test.assert_eq
?::0XfEd Int @test.assert_eq
?::0X1_2_3 Int @test.assert_eq
?::123_456_789 Int @test.assert_eq

10 10 + 20 @test.assert_eq
20 10 - 10 @test.assert_eq
30 30 * 900 @test.assert_eq
25 5 / 5 @test.assert_eq
##a b [=> a b /] {10, 0} @test.assert_raises_error
##a b [=> a b /] {0, 0} @test.assert_raises_error
7 3 % 1 @test.assert_eq
##a b [=> a b %] {10, 0} @test.assert_raises_error
##a b [=> a b %] {0, 0} @test.assert_raises_error
5 2 ^ 25 @test.assert_eq
5 2 | 7 @test.assert_eq
5 2 & 0 @test.assert_eq
5 2 ^^ 7 @test.assert_eq
~10 -11 @test.assert_eq
~ -11 10 @test.assert_eq
-:1 -1 @test.assert_eq
-: -9223372036854775808 -9223372036854775808 @test.assert_eq
~ -9223372036854775808 9223372036854775807 @test.assert_eq

Int :: 123.0 123 @test.assert_eq
Int :: 1.1 1 @test.assert_eq
Int :: 1.5 1 @test.assert_eq
Int :: 1.9 1 @test.assert_eq
Int :: -1.1 -1 @test.assert_eq
Int :: -1.5 -1 @test.assert_eq
Int :: -1.9 -1 @test.assert_eq
Int :: 20b 20 @test.assert_eq
Int :: 256b 0 @test.assert_eq
Int :: 257b 1 @test.assert_eq
Int :: '123' 123 @test.assert_eq
Int :: ' 123  ' 123 @test.assert_eq
Int :: '\n123\t' 123 @test.assert_eq
Int :: '0123' 0123 @test.assert_eq
Int :: '00123' 00123 @test.assert_eq
Int :: '0b101' 0b101 @test.assert_eq
Int :: '0B101' 0B101 @test.assert_eq
Int :: '0o123' 0o123 @test.assert_eq
Int :: '0O123' 0O123 @test.assert_eq
Int :: '0x123' 0x123 @test.assert_eq
Int :: '0X123' 0X123 @test.assert_eq
Int :: '0XEeF' 0XEeF @test.assert_eq
Int :: '0XfEd' 0XfEd @test.assert_eq
Int :: '0X1_2_3' 0X1_2_3 @test.assert_eq
Int :: '123_456_789' 123_456_789 @test.assert_eq
'' Int @test.assert_cast_error
'  ' Int @test.assert_cast_error
'-' Int @test.assert_cast_error
'+' Int @test.assert_cast_error
'0b' Int @test.assert_cast_error
'0B' Int @test.assert_cast_error
'0o' Int @test.assert_cast_error
'0O' Int @test.assert_cast_error
'0x' Int @test.assert_cast_error
'0X' Int @test.assert_cast_error
'a' Int @test.assert_cast_error
'0b2' Int @test.assert_cast_error
'0o9' Int @test.assert_cast_error
'0xg' Int @test.assert_cast_error
'9223372036854775809' Int @test.assert_cast_error
'-9223372036854775809' Int @test.assert_cast_error
'123 a' Int @test.assert_cast_error
