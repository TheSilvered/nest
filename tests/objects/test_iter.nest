|#| '../test_lib.nest' = test

-- Test syntax
0 -> 5 = iter1
1 -> 5 = iter2
5 -> 0 = iter3
5 -> 1 = iter4
2 0 -> 10 = iter5
2 0 -> 9 = iter6
2 1 -> 10 = iter7
2 1 -> 11 = iter8
-2 10 -> 0 = iter9
-2 10 -> 1 = iter10
-2 9 -> 0 = iter11
-2 9 -> 1 = iter12

?::iter1 Iter @test.assert_eq
?::iter5 Iter @test.assert_eq

##[0 1 -> 5] {,} @test.assert_raises_error
##[0 5 -> 1] {,} @test.assert_raises_error

-- Test '::' operator
Array :: iter1  {0, 1, 2, 3, 4}  @test.assert_eq
Array :: iter2  {1, 2, 3, 4}     @test.assert_eq
Array :: iter3  {5, 4, 3, 2, 1}  @test.assert_eq
Array :: iter4  {5, 4, 3, 2}     @test.assert_eq
Array :: iter5  {0, 2, 4, 6, 8}  @test.assert_eq
Array :: iter6  {0, 2, 4, 6, 8}  @test.assert_eq
Array :: iter7  {1, 3, 5, 7, 9}  @test.assert_eq
Array :: iter8  {1, 3, 5, 7, 9}  @test.assert_eq
Array :: iter9  {10, 8, 6, 4, 2} @test.assert_eq
Array :: iter10 {10, 8, 6, 4, 2} @test.assert_eq
Array :: iter11 {9, 7, 5, 3, 1}  @test.assert_eq
Array :: iter12 {9, 7, 5, 3}     @test.assert_eq

Vector :: iter1  <{0, 1, 2, 3, 4}>  @test.assert_eq
Vector :: iter2  <{1, 2, 3, 4}>     @test.assert_eq
Vector :: iter3  <{5, 4, 3, 2, 1}>  @test.assert_eq
Vector :: iter4  <{5, 4, 3, 2}>     @test.assert_eq
Vector :: iter5  <{0, 2, 4, 6, 8}>  @test.assert_eq
Vector :: iter6  <{0, 2, 4, 6, 8}>  @test.assert_eq
Vector :: iter7  <{1, 3, 5, 7, 9}>  @test.assert_eq
Vector :: iter8  <{1, 3, 5, 7, 9}>  @test.assert_eq
Vector :: iter9  <{10, 8, 6, 4, 2}> @test.assert_eq
Vector :: iter10 <{10, 8, 6, 4, 2}> @test.assert_eq
Vector :: iter11 <{9, 7, 5, 3, 1}>  @test.assert_eq
Vector :: iter12 <{9, 7, 5, 3}>     @test.assert_eq

Iter :: {{'a', 1}, {'b', 2}} = map_iter1
Iter :: {{'a', 1}} = map_iter2
Iter :: {,} = map_iter3
Map :: map_iter1 {'a': 1, 'b': 2} @test.assert_eq
Map :: map_iter1 {'a': 1, 'b': 2} @test.assert_eq
Map :: map_iter2 {'a': 1} @test.assert_eq
Map :: map_iter2 {'a': 1} @test.assert_eq
Map :: map_iter3 {} @test.assert_eq
Map :: map_iter3 {} @test.assert_eq
