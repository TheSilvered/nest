|#| '../test_lib.nest' = test

<{1, 2, 3, 4, 5}> = vect

?::vect Vector @test.assert_eq
$vect 5 @test.assert_eq
vect.0 1 @test.assert_eq
vect.1 2 @test.assert_eq
vect.2 3 @test.assert_eq
vect.3 4 @test.assert_eq
vect.4 5 @test.assert_eq
vect.-1 5 @test.assert_eq
vect.-2 4 @test.assert_eq
vect.-3 3 @test.assert_eq
vect.-4 2 @test.assert_eq
vect.-5 1 @test.assert_eq

10 = vect.0
vect.0 10 @test.assert_eq
50 = vect.-1
vect.-1 50 @test.assert_eq

<{<{1, 2}>,
  <{3, 4}>}> = vect_2d

vect_2d.0 .0 1 @test.assert_eq
vect_2d.0 {1, 2} @test.assert_eq

<{1, 2}> <{1, 2}> @test.assert_eq
<{1, 2}> {1, 2} @test.assert_eq
<{1, 2}> <{1, 2, 3}> @test.assert_ne
<{1, 2}> {1, 2, 3} @test.assert_ne

<{10;5}> <{10, 10, 10, 10, 10}> @test.assert_eq

Str :: <{1, 2, 3}> '<{1, 2, 3}>' @test.assert_eq
Array :: <{1, 2, 3}> {1, 2, 3} @test.assert_eq
Bool :: <{}> @test.assert_false
Bool :: <{0}> @test.assert_true

<{}> @test.assert_false
<{1}> @test.assert_true

<{1, 2, 3}> 2 + <{1, 2, 3, 2}> @test.assert_eq
<{1, 2, 3}> 1 2 3 4 5 6 7 + <{1, 2, 3, 1, 2, 3, 4, 5, 6, 7}> @test.assert_eq
<{1, 2, 3}> 2 - <{1, 3}> @test.assert_eq
<{1, 2, 3}> 5 - <{1, 2, 3}> @test.assert_eq

<{1, 2, 3}> 2 *  <{1, 2, 3, 1, 2, 3}> @test.assert_eq
<{1, 2, 3}> 2 / 2 @test.assert_eq
<{1, 2, 3}> 10 / 1 @test.assert_eq
?::(Vector :: {1, 2, 3}) Vector @test.assert_eq

<{}> 3 <.> @test.assert_false
<{}> <{}> <.> @test.assert_false
<{1, 2, 3, 4}> 5 <.> @test.assert_false
<{1, '2', 3, {}}> 5 <.> @test.assert_false
<{1, '2', 3, {}}> 3 <.> @test.assert_true
<{1, '2', 3, {}}> '2' <.> @test.assert_true
<{1, '2', 3, {}}> 1 <.> @test.assert_true
<{1, '2', 3, {}}> {} <.> @test.assert_true

<{1, 2, 3, 4, 5}> = vec
Iter :: vec = vector_iter1
Iter :: <{1}> = vector_iter2
Iter :: <{}> = vector_iter3
Iter :: <{0, 0, 1, 0}> = vector_iter4

Array :: vector_iter1 {1, 2, 3, 4, 5} @test.assert_eq
Array :: vector_iter1 {1, 2, 3, 4, 5} @test.assert_eq
Array :: vector_iter2 {1} @test.assert_eq
Array :: vector_iter2 {1} @test.assert_eq
Array :: vector_iter3 {,} @test.assert_eq
Array :: vector_iter3 {,} @test.assert_eq
Array :: vector_iter4 {0, 0, 1, 0} @test.assert_eq
Array :: vector_iter4 {0, 0, 1, 0} @test.assert_eq

10 = vec.2
Array :: vector_iter1 {1, 2, 10, 4, 5} @test.assert_eq
Array :: vector_iter1 {1, 2, 10, 4, 5} @test.assert_eq
vec 3 +
Array :: vector_iter1 {1, 2, 10, 4, 5, 3} @test.assert_eq
Array :: vector_iter1 {1, 2, 10, 4, 5, 3} @test.assert_eq
vec 2 -
Array :: vector_iter1 {1, 10, 4, 5, 3} @test.assert_eq
Array :: vector_iter1 {1, 10, 4, 5, 3} @test.assert_eq
vec 1 /
Array :: vector_iter1 {1, 10, 4, 5} @test.assert_eq
Array :: vector_iter1 {1, 10, 4, 5} @test.assert_eq
