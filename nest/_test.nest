|#| "stdrand.nest" = rand

#randomize_table t [
    int :: <<< 'Seed: ' = seed

    3 = x
    3 = y

    ... 200 [
        seed @rand = seed
        seed 4 % = move
        t move x y @swap_tiles = new_coords
        new_coords.0 = x
        new_coords.1 = y
    ]
    => { x, y }
]

#swap_tiles t move x y [
    move 0 == ? [
        y 0 == ? => { x, y }
        t.(y 1 -).(x) = t.(y).(x)
        0 = t.(y 1 -).(x)
        1 -= y
    ]
    : move 1 == ? [
        y 3 == ? => { x, y }
        t.(y 1 +).(x) = t.(y).(x)
        0 = t.(y 1 +).(x)
        1 += y
    ]
    : move 2 == ? [
        x 0 == ? => { x, y }
        t.(y).(x 1 -) = t.(y).(x)
        0 = t.(y).(x 1 -)
        1 -= x
    ]
    : [
        x 3 == ? => { x, y }
        t.(y).(x 1 +) = t.(y).(x)
        0 = t.(y).(x 1 +)
        1 += x
    ]
    => { x, y }
]

#print_table t [
    ... 0 -> $t ~= i [
        >>> '+----+----+----+----+\n'
        ... 0 -> $t.(i) ~= j [
            t.(i).(j) = val
            >>> '| '

            val 0 == ? >>> '  '
            : val 10 < ? >>> (0 val ><)
            : >>> val

            >>> ' '
        ]
        >>> '|\n'
    ]
    >>> '+----+----+----+----+\n'
]

#make_moves str t x y [
    -- 1 - removes the new line
    ... 0 -> $str ~= i [
        str.(i) 's' == ?
            t 0 x y @swap_tiles = new_coords
        : str.(i) 'w' == ?
            t 1 x y @swap_tiles = new_coords
        : str.(i) 'd' == ?
            t 2 x y @swap_tiles = new_coords
        : str.(i) 'a' == ?
            t 3 x y @swap_tiles = new_coords
        : [
            >>> ('Invalid move \"' str.(i) '\"\n' ><)
            ..
        ]
        new_coords.0 = x
        new_coords.1 = y
    ]
    => { x, y }
]

{
    <{ 1, 2, 3, 4 }>,
    <{ 5, 6, 7, 8 }>,
    <{ 9,10,11,12 }>,
    <{13,14,15, 0 }>
} = table

{
    { 1, 2, 3, 4 },
    { 5, 6, 7, 8 },
    { 9,10,11,12 },
    {13,14,15, 0 }
} = win_table

table @randomize_table = coords

..? table win_table != [
    table @print_table
    <<< "> " = moves
    moves 'exit' == ? ;
    moves table coords.0 coords.1 @make_moves = coords
]

table win_table == ? [
    table @print_table
    >>> "You win!\n"
]